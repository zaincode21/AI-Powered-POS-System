{"ast":null,"code":"var _jsxFileName = \"/home/serge/Desktop/AI-Powered-POS-System/src/pages/ScanProduct.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ScanProduct() {\n  _s();\n  const [qrInput, setQrInput] = useState('');\n  const [product, setProduct] = useState(null);\n  const [quantity, setQuantity] = useState('');\n  const handleScan = () => {\n    try {\n      const data = JSON.parse(qrInput);\n      setProduct(data);\n    } catch {\n      setProduct(null);\n      alert('Invalid QR code data');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-md mx-auto mt-10 p-6 bg-white rounded-xl shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Scan Product QR Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"w-full border rounded p-2 mb-2\",\n      rows: 3,\n      placeholder: \"Paste QR code content here\",\n      value: qrInput,\n      onChange: e => setQrInput(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-purple-600 text-white px-4 py-2 rounded mb-4\",\n      onClick: handleScan,\n      children: \"Parse QR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), product && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Product Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 33\n        }, this), \" \", product.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Cost:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 33\n        }, this), \" $\", Number(product.cost_price).toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Quantity:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"ml-2 border rounded p-1 w-24\",\n          value: quantity,\n          onChange: e => setQuantity(e.target.value),\n          min: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(ScanProduct, \"ufCjkFHb0oY85H/eOIwvlXPQTiA=\");\n_c = ScanProduct;\nexport default ScanProduct;\nvar _c;\n$RefreshReg$(_c, \"ScanProduct\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ScanProduct","_s","qrInput","setQrInput","product","setProduct","quantity","setQuantity","handleScan","data","JSON","parse","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","rows","placeholder","value","onChange","e","target","onClick","name","Number","cost_price","toFixed","type","min","_c","$RefreshReg$"],"sources":["/home/serge/Desktop/AI-Powered-POS-System/src/pages/ScanProduct.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction ScanProduct() {\n  const [qrInput, setQrInput] = useState('');\n  const [product, setProduct] = useState(null);\n  const [quantity, setQuantity] = useState('');\n\n  const handleScan = () => {\n    try {\n      const data = JSON.parse(qrInput);\n      setProduct(data);\n    } catch {\n      setProduct(null);\n      alert('Invalid QR code data');\n    }\n  };\n\n  return (\n    <div className=\"max-w-md mx-auto mt-10 p-6 bg-white rounded-xl shadow\">\n      <h2 className=\"text-xl font-bold mb-4\">Scan Product QR Code</h2>\n      <textarea\n        className=\"w-full border rounded p-2 mb-2\"\n        rows={3}\n        placeholder=\"Paste QR code content here\"\n        value={qrInput}\n        onChange={e => setQrInput(e.target.value)}\n      />\n      <button\n        className=\"bg-purple-600 text-white px-4 py-2 rounded mb-4\"\n        onClick={handleScan}\n      >\n        Parse QR\n      </button>\n      {product && (\n        <div className=\"mt-4\">\n          <div className=\"mb-2\"><b>Product Name:</b> {product.name}</div>\n          <div className=\"mb-2\"><b>Cost:</b> ${Number(product.cost_price).toFixed(2)}</div>\n          <div className=\"mb-2\">\n            <b>Quantity:</b>\n            <input\n              type=\"number\"\n              className=\"ml-2 border rounded p-1 w-24\"\n              value={quantity}\n              onChange={e => setQuantity(e.target.value)}\n              min=\"1\"\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ScanProduct; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}